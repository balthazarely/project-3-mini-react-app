{"ast":null,"code":"var _jsxFileName = \"/Users/Brent/sei-autumn-sweaters/Projects/Project#2-express-react-api/employee-client-react/project-3-mini-react-app/src/EmployeeContainer/index.js\";\nimport React, { Component } from 'react';\nimport CreateEmployee from '../CreateEmployee';\nimport EmployeeList from '../EmployeeList';\nimport EditEmployee from '../EditEmployee';\n\nclass EmployeeContainer extends Component {\n  constructor() {\n    super();\n\n    this.addEmployee = async (employee, e) => {\n      e.preventDefault();\n      console.log(employee, e, 'inside of addEmployee');\n\n      try {\n        const createEmployee = await fetch('http://localhost:9000/api/v1/employee', {\n          method: 'POST',\n          body: JSON.stringify(employee),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (createEmployee.status !== 200) {\n          throw Error('404 from server');\n        }\n\n        const createEmployeeResponse = await createEmployee.json();\n        console.log(createEmployeeResponse.data, 'createEmployeeResponse');\n        this.setState({\n          employees: [...this.state.employees, createEmployeeResponse.data]\n        });\n      } catch (err) {\n        console.log(err, 'addEmployee');\n        return err;\n      }\n    };\n\n    this.getEmployees = async () => {\n      try {\n        const responseGetEmployees = await fetch('http://localhost:9000/api/v1/employee');\n        console.log(responseGetEmployees, 'responseGetEmployees');\n\n        if (responseGetEmployees.status !== 200) {\n          throw Error('404 from server');\n        }\n\n        const employeesResponse = await responseGetEmployees.json();\n        console.log(employeesResponse, '<-employeesResponse');\n        this.setState({\n          employees: [...employeesResponse.data]\n        });\n      } catch (err) {\n        console.log(err, 'getEmployees');\n        return err;\n      }\n    };\n\n    this.showModal = employeeId => {\n      console.log(employeeId, 'employeeId in showModal');\n      this.setState({\n        employeeToEdit: employee,\n        showEditModal: !this.state.showEditModal\n      });\n    };\n\n    this.state = {\n      employees: [],\n      showEditModal: false,\n      employeeToEdit: {\n        _id: null,\n        name: '',\n        position: '',\n        birthDate: '',\n        department: '',\n        salary: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n  render() {\n    console.log(this.state, '<-state in render');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(CreateEmployee, {\n      addEmployee: this.addEmployee,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(EmployeeList, {\n      employees: this.state.employees,\n      showModal: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), this.state.showEditModal ? React.createElement(EditEmployee, {\n      employeeToEdit: this.state.employeeToEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default EmployeeContainer;","map":{"version":3,"sources":["/Users/Brent/sei-autumn-sweaters/Projects/Project#2-express-react-api/employee-client-react/project-3-mini-react-app/src/EmployeeContainer/index.js"],"names":["React","Component","CreateEmployee","EmployeeList","EditEmployee","EmployeeContainer","constructor","addEmployee","employee","e","preventDefault","console","log","createEmployee","fetch","method","body","JSON","stringify","headers","status","Error","createEmployeeResponse","json","data","setState","employees","state","err","getEmployees","responseGetEmployees","employeesResponse","showModal","employeeId","employeeToEdit","showEditModal","_id","name","position","birthDate","department","salary","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AACzCK,EAAAA,WAAW,GAAG;AACb;;AADa,SAsBdC,WAtBc,GAsBA,OAAOC,QAAP,EAAiBC,CAAjB,KAAuB;AACpCA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsBC,CAAtB,EAAyB,uBAAzB;;AACA,UAAI;AACH,cAAMI,cAAc,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;AAC3EC,UAAAA,MAAM,EAAE,MADmE;AAE3EC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf,CAFqE;AAG3EW,UAAAA,OAAO,EAAE;AACR,4BAAgB;AADR;AAHkE,SAA1C,CAAlC;;AAOA,YAAGN,cAAc,CAACO,MAAf,KAA0B,GAA7B,EAAkC;AACjC,gBAAMC,KAAK,CAAC,iBAAD,CAAX;AACA;;AACD,cAAMC,sBAAsB,GAAG,MAAMT,cAAc,CAACU,IAAf,EAArC;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYU,sBAAsB,CAACE,IAAnC,EAAyC,wBAAzC;AACA,aAAKC,QAAL,CAAc;AACbC,UAAAA,SAAS,EAAC,CAAC,GAAG,KAAKC,KAAL,CAAWD,SAAf,EAA0BJ,sBAAsB,CAACE,IAAjD;AADG,SAAd;AAIA,OAjBD,CAiBE,OAAMI,GAAN,EAAW;AACZjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ,EAAiB,aAAjB;AACA,eAAOA,GAAP;AACA;AACD,KA9Ca;;AAAA,SAgDdC,YAhDc,GAgDC,YAAY;AAC1B,UAAG;AACF,cAAMC,oBAAoB,GAAG,MAAMhB,KAAK,CAAC,uCAAD,CAAxC;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYkB,oBAAZ,EAAkC,sBAAlC;;AACA,YAAIA,oBAAoB,CAACV,MAArB,KAAgC,GAApC,EAAyC;AACxC,gBAAMC,KAAK,CAAC,iBAAD,CAAX;AACA;;AACD,cAAMU,iBAAiB,GAAG,MAAMD,oBAAoB,CAACP,IAArB,EAAhC;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYmB,iBAAZ,EAA+B,qBAA/B;AACA,aAAKN,QAAL,CAAc;AACbC,UAAAA,SAAS,EAAE,CAAC,GAAGK,iBAAiB,CAACP,IAAtB;AADE,SAAd;AAGA,OAXD,CAWE,OAAMI,GAAN,EAAW;AACZjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ,EAAiB,cAAjB;AACA,eAAOA,GAAP;AACA;AACD,KAhEa;;AAAA,SAkEdI,SAlEc,GAkEDC,UAAD,IAAgB;AAC3BtB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,UAAZ,EAAwB,yBAAxB;AACA,WAAKR,QAAL,CAAc;AACbS,QAAAA,cAAc,EAAE1B,QADH;AAEb2B,QAAAA,aAAa,EAAE,CAAC,KAAKR,KAAL,CAAWQ;AAFd,OAAd;AAIA,KAxEa;;AAGb,SAAKR,KAAL,GAAa;AACZD,MAAAA,SAAS,EAAE,EADC;AAEZS,MAAAA,aAAa,EAAE,KAFH;AAGZD,MAAAA,cAAc,EAAE;AACfE,QAAAA,GAAG,EAAE,IADU;AAEfC,QAAAA,IAAI,EAAE,EAFS;AAGfC,QAAAA,QAAQ,EAAE,EAHK;AAIfC,QAAAA,SAAS,EAAE,EAJI;AAKfC,QAAAA,UAAU,EAAE,EALG;AAMfC,QAAAA,MAAM,EAAE;AANO;AAHJ,KAAb;AAaA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,SAAKb,YAAL;AACA;;AAsDDc,EAAAA,MAAM,GAAG;AACRhC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKe,KAAjB,EAAwB,mBAAxB;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,cAAD;AAAgB,MAAA,WAAW,EAAE,KAAKpB,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAE,KAAKoB,KAAL,CAAWD,SAApC;AAA+C,MAAA,SAAS,EAAE,KAAKM,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGE,KAAKL,KAAL,CAAWQ,aAAX,GAA2B,oBAAC,YAAD;AAAc,MAAA,cAAc,EAAE,KAAKR,KAAL,CAAWO,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,GAAwF,IAH1F,CADD;AAOA;;AApFwC;;AAwF1C,eAAe7B,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport CreateEmployee from '../CreateEmployee';\nimport EmployeeList from '../EmployeeList';\nimport EditEmployee from '../EditEmployee';\n\nclass EmployeeContainer extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\temployees: [],\n\t\t\tshowEditModal: false,\n\t\t\temployeeToEdit: {\n\t\t\t\t_id: null,\n\t\t\t\tname: '',\n\t\t\t\tposition: '',\n\t\t\t\tbirthDate: '',\n\t\t\t\tdepartment: '',\n\t\t\t\tsalary: ''\n\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getEmployees();\n\t}\n\n\taddEmployee = async (employee, e) => {\n\t\te.preventDefault();\n\t\tconsole.log(employee, e, 'inside of addEmployee');\n\t\ttry {\n\t\t\tconst createEmployee = await fetch('http://localhost:9000/api/v1/employee', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(employee),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tif(createEmployee.status !== 200) {\n\t\t\t\tthrow Error('404 from server')\n\t\t\t}\n\t\t\tconst createEmployeeResponse = await createEmployee.json();\n\t\t\tconsole.log(createEmployeeResponse.data, 'createEmployeeResponse');\n\t\t\tthis.setState({\n\t\t\t\temployees:[...this.state.employees, createEmployeeResponse.data]\n\t\t\t})\n\t\t\t\n\t\t} catch(err) {\n\t\t\tconsole.log(err, 'addEmployee');\n\t\t\treturn err\n\t\t}\n\t}\n\n\tgetEmployees = async () => {\n\t\ttry{\n\t\t\tconst responseGetEmployees = await fetch('http://localhost:9000/api/v1/employee')\n\t\t\tconsole.log(responseGetEmployees, 'responseGetEmployees')\n\t\t\tif (responseGetEmployees.status !== 200) {\n\t\t\t\tthrow Error('404 from server')\n\t\t\t}\n\t\t\tconst employeesResponse = await responseGetEmployees.json();\n\t\t\tconsole.log(employeesResponse, '<-employeesResponse');\n\t\t\tthis.setState({\n\t\t\t\temployees: [...employeesResponse.data]\n\t\t\t});\n\t\t} catch(err) {\n\t\t\tconsole.log(err, 'getEmployees');\n\t\t\treturn err\n\t\t}\n\t}\n\n\tshowModal = (employeeId) => {\n\t\tconsole.log(employeeId, 'employeeId in showModal');\n\t\tthis.setState({\n\t\t\temployeeToEdit: employee,\n\t\t\tshowEditModal: !this.state.showEditModal\n\t\t})\n\t}\n\n\trender() {\n\t\tconsole.log(this.state, '<-state in render');\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<CreateEmployee addEmployee={this.addEmployee} />\n\t\t\t\t<EmployeeList employees={this.state.employees} showModal={this.showModal}/>\n\t\t\t\t{this.state.showEditModal ? <EditEmployee employeeToEdit={this.state.employeeToEdit}/> : null}\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\n\nexport default EmployeeContainer;\n"]},"metadata":{},"sourceType":"module"}