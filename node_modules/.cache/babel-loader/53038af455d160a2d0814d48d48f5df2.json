{"ast":null,"code":"var _jsxFileName = \"/Users/Brent/sei-autumn-sweaters/Projects/Project#2-express-react-api/employee-client-react/project-3-mini-react-app/src/EmployeeShow/index.js\";\nimport React, { Component } from 'react';\nimport TweetList from './TweetList';\nimport { Form, Button, Label } from 'semantic-ui-react';\n\nconst EmployeeShow = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: props.getTweets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Search:\"), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Search Tweets\")));\n}; // class EmployeeShow extends Component {\n// \tconstructor() {\n// \t\tsuper();\n// \t\tthis.state = {\n// \t\t\tname: '',\n// \t\t\tid: '',\n// \t\t\ttwitter: {\n// \t\t\t\tname: '',\n// \t\t\t\ttweet: '',\n// \t\t\t\tdate: ''\n// \t\t\t}\n// \t\t}\n// \t}\n// \tgetTweets = async () => {\n// \t\ttry {\n// \t\t\tconst tweets = await fetch('https://api.twitter.com/1.1/search/tweets.json');\n// \t\t\tconst tweetsJson = await tweets.json();\n// \t\t\treturn tweetsJson;\n// \t\t} catch(err) {\n// \t\t\tconsole.log(err, 'getTweets err');\n// \t\t\treturn err;\n// \t\t}\n// \t}\n// \tcomponentDidMount() {\n// \t\tthis.getTweets()\n// \t\t\t.then((data) => {\n// \t\t\t\tconsole.log(data, \"data\");\n// \t\t\t\tthis.setState({\n// \t\t\t\t\ttwitter: data\n// \t\t\t\t})\n// \t\t\t})\n// \t}\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<TweetList getTweets={this.getTweets} />\n// \t\t\t\t<button>Get Tweets</button>\n// \t\t\t</div>\n// \t\t\t)\n// \t}\n// }\n\n\nexport default EmployeeShow;","map":{"version":3,"sources":["/Users/Brent/sei-autumn-sweaters/Projects/Project#2-express-react-api/employee-client-react/project-3-mini-react-app/src/EmployeeShow/index.js"],"names":["React","Component","TweetList","Form","Button","Label","EmployeeShow","props","getTweets"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,mBAApC;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC/B,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,EAIC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJD,CADD,CADD;AAYA,CAbD,C,CAiBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport TweetList from './TweetList';\nimport { Form, Button, Label } from 'semantic-ui-react';\n\nconst EmployeeShow = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<Form onSubmit={props.getTweets}>\n\t\t\t\t<Label>\n\t\t\t\t\tSearch:\n\t\t\t\t</Label>\n\t\t\t\t<Button type=\"submit\">\n\t\t\t\t\tSearch Tweets\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</div>\n\t\t)\n}\n\n\n\n// class EmployeeShow extends Component {\n// \tconstructor() {\n// \t\tsuper();\n\n// \t\tthis.state = {\n// \t\t\tname: '',\n// \t\t\tid: '',\n// \t\t\ttwitter: {\n// \t\t\t\tname: '',\n// \t\t\t\ttweet: '',\n// \t\t\t\tdate: ''\n// \t\t\t}\n// \t\t}\n// \t}\n\n// \tgetTweets = async () => {\n// \t\ttry {\n// \t\t\tconst tweets = await fetch('https://api.twitter.com/1.1/search/tweets.json');\n// \t\t\tconst tweetsJson = await tweets.json();\n// \t\t\treturn tweetsJson;\n// \t\t} catch(err) {\n// \t\t\tconsole.log(err, 'getTweets err');\n// \t\t\treturn err;\n// \t\t}\n// \t}\n\n// \tcomponentDidMount() {\n// \t\tthis.getTweets()\n// \t\t\t.then((data) => {\n// \t\t\t\tconsole.log(data, \"data\");\n// \t\t\t\tthis.setState({\n// \t\t\t\t\ttwitter: data\n// \t\t\t\t})\n// \t\t\t})\n// \t}\n\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<TweetList getTweets={this.getTweets} />\n// \t\t\t\t<button>Get Tweets</button>\n// \t\t\t</div>\n// \t\t\t)\n// \t}\n// }\n\nexport default EmployeeShow;"]},"metadata":{},"sourceType":"module"}